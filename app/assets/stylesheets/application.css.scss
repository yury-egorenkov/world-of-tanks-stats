/****
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any styles
 * defined in the other CSS/SCSS files in this directory. It is generally better to create a new
 * file per style scope.
 *
 *= require_tree .
 *= require_self
 */

@import "bootstrap-sprockets";
@import "bootstrap";

$input-border-focus: none;

.btn:focus, .btn:active {
  outline: none!important;
  background-color: transparent!important;
}

.btn.active:focus {
  @extend .btn:hover;
  background-color: #e6e6e6!important;
}

.tanks-stat {
  min-width: 1170px;
}

.tank {
  position: absolute;
  top: 0;
  left: 0;

  width: 80px;

  image {
    height: auto;
  }

  img {
    width: 100%;
    height: auto;
  }

  .mask {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

.vertical-space {
  margin-top: 10px;
}

.armor-legend {

  & > * {
    // display: inline-block;
    float: left;
    margin: 0;
    padding: 0;
    height: 32px;
    line-height: 32px;
  }

  .title {
    margin-right: 4px;
  }

  .step {
    color: white;
    text-shadow: 0 1px rgba(0, 0, 0, 0.2);
    text-align: center;
    width: 32px;
    background-color: #ddd;
    margin-left: 1px;
    border-radius: 4px;
  }
}

@mixin create-flags($country_names, $height) {
  @each $country in $country_names {
      $i: index($country_names, $country);
      &.#{$country} {
        background-position: 0 ($i - 1) * (-$height);
      }
  }
}

.flag {
  $width: 33px; // Original width: 150px;
  $height: 20px; // Original height: 20px;

  display: inline-block;

  background-image: url( asset_path('nation-retina.png') );
  background-repeat: no-repeat;
  background-size: $width ($height * 4);
  background-position: 0 $height;
  width: $width;
  height: $height;

  $country_names: "us", "ussr", "germany", "uk";
  @include create-flags($country_names, $height);

  $country_names: "am", "ru", "ge", "uk";
  @include create-flags($country_names, $height);

}

.btn div {
  float: left;
  vertical-align: middle;
  &:not(:first-child) {
    margin-left: 4px;
  }
}

.chart {
  min-width: 1170px;
  min-height: 500px;
}

path, line {
    fill: none;
    stroke: #999;
    shape-rendering: crispEdges;
}

// .mirror {
//   .tank {
//     -moz-transform: scaleX(-1);
//     -o-transform: scaleX(-1);
//     -webkit-transform: scaleX(-1);
//     transform: scaleX(-1);
//     filter: FlipH;
//     -ms-filter: "FlipH";
//   }
// }

.tank {
  position: absolute;
}

.label {
  color: white;
  fill: #eee;
  text-shadow: 1px 1px 1px black;
}


.tank {
  transition: opacity 1.5s ease-in-out;

  &.invisible {
    opacity: 0;
    z-index: -1;
  }
}

.description {
  width: 500px;
  border: 1px solid gray;
  padding: 10px;
  font-size: 11px;
  margin: 0 auto;

  .row {
    margin-top: 5px;
  }

  hr {
    margin: 0;
  }

  .group {
    @extend .row;
  }

  .field {
    @extend .col-xs-8;
  }

  .value {
    @extend .col-xs-4;
  }

  .mark {
    position: absolute;
    background-color: red;
    border-radius: 50%;
    width: 10px;
    height: 10px;
    right: 40px;
    margin-top: 3px;
  }

  .armor{
    font-size: 110%;
    font-weight: bold;
    margin-top: 10px;
  }

  .title div {
    float: left;
    vertical-align: middle;
    font-size: 26px;
    line-height: 26px;

    &:not(:first-child) {
      margin-left: 15px;
    }
  }

  .name {
    font-size: 26px;
    font-weight: bold;
  }

  img {
    width: 200px;
  }

}



